{"version":3,"sources":["theme/typography.js","theme/theme.js","pages/Loading.js","actions/action_type/data_fetch.js","actions/action_creators/data_fetch.js","components/RadioButtons.js","components/WeatherCard.js","components/Carousel/Carousel.js","components/Chart.js","pages/Home.js","App.js","reducers/data_fetch.js","reducers/index.js","store.js","index.js","components/Carousel/Carousel.module.css"],"names":["typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","theme","createTheme","palette","primary","main","secondary","error","red","A400","background","default","useStyles","makeStyles","root","display","placeItems","height","Loading","classes","className","CircularProgress","FETCH_FROM_API","TOGGLE_TEMPERATURE","axios","require","getWeatherData","dispatch","get","then","data","splitToDate","i","list","i_textDate","dt_txt","split","j","currentItem","push","type","payload","city","catch","err","console","log","RadioButtons","useDispatch","React","useState","selectTemp","setSelectTemp","Box","my","mx","justifyContent","alignItems","RadioGroup","name","value","onChange","event","temperature","target","row","FormControlLabel","control","Radio","label","IconButton","component","onClick","minWidth","margin","title","pos","marginBottom","WeatherCard","day","useSelector","state","weatherReducer","weatherData","dayData","makeFirstUppercase","charAt","toUpperCase","slice","cardData","date","Date","toLocaleDateString","weekday","year","month","temp","fahTemp","parseInt","celsius","Math","round","handleTTemperature","weather","desc","description","Card","variant","CardContent","Typography","color","align","gutterBottom","mt","Carousel","handleSelectDay","selectedItemIndex","setSelectedItemIndex","currentItemRef","useRef","objLength","Object","keys","length","useEffect","current","handleSelectedItemChange","newIdx","scrollIntoView","inline","behavior","block","handleLeftClick","handleRightClick","Controls","oprions","handler","icon","width","carouselWrap","map","index","ref","el","cardItem","selectedItem","ReactFC","fcRoot","FusionCharts","Charts","FusionTheme","Chart","seletctedDay","onvertTime","time24","match","sHours","minutes","period","values","item","time","chart","xAxisName","yAxisName","numberSuffix","chartConfigs","window","innerWidth","dataFormat","dataSource","Home","setSelectedDay","Container","maxWidth","country","App","setTimeout","initialState","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a8034830.chunk.js","sourcesContent":["const typography = {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: \"-0.24px\",\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: \"-0.24px\",\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: \"-0.06px\",\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: \"-0.06px\",\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: \"-0.05px\",\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: \"-0.05px\",\r\n  },\r\n  overline: {\r\n    fontWeight: 500,\r\n  },\r\n};\r\n\r\nexport default typography;\r\n","import { red } from \"@material-ui/core/colors\";\r\nimport { createTheme } from \"@material-ui/core/styles\";\r\nimport typography from \"./typography\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#556cd6\",\r\n    },\r\n    secondary: {\r\n      main: \"#19857b\",\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: \"#fff\",\r\n    },\r\n  },\r\n  typography,\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"grid\",\r\n    placeItems: \"center\",\r\n    height: \"100vh\",\r\n  },\r\n}));\r\n\r\nfunction Loading() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","export const FETCH_FROM_API = \"FETCH_FROM_API\";\r\nexport const TOGGLE_TEMPERATURE = \"TOGGLE_TEMPERATURE\";\r\n","import { FETCH_FROM_API, TOGGLE_TEMPERATURE } from \"../action_type/data_fetch\";\r\n//import data from \"../../mockData\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst getWeatherData = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(\r\n        \"https://api.openweathermap.org/data/2.5/forecast?id=524901&appid=c714f87ec1e66ee0a71a17880ac6fc19\"\r\n      )\r\n      .then(({ data }) => {\r\n        let splitToDate = {};\r\n\r\n        for (const i in data.list) {\r\n          const i_textDate = data.list[i].dt_txt.split(\" \")[0];\r\n          if (!(i_textDate in splitToDate)) {\r\n            for (const j in data.list) {\r\n              const currentItem = data.list[j];\r\n              const j_textDate = currentItem.dt_txt.split(\" \")[0];\r\n              if (i_textDate === j_textDate) {\r\n                if (i_textDate in splitToDate) {\r\n                  splitToDate[i_textDate].push(currentItem);\r\n                } else {\r\n                  splitToDate[i_textDate] = [currentItem];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        dispatch({\r\n          type: FETCH_FROM_API,\r\n          payload: { data: { city: data.city, list: splitToDate } },\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\n// const getWeatherData = () => {\r\n//   return (dispatch) => {\r\n//     let splitToDate = {};\r\n\r\n//     for (const i in data.list) {\r\n//       const i_textDate = data.list[i].dt_txt.split(\" \")[0];\r\n//       if (!(i_textDate in splitToDate)) {\r\n//         for (const j in data.list) {\r\n//           const currentItem = data.list[j];\r\n//           const j_textDate = currentItem.dt_txt.split(\" \")[0];\r\n//           if (i_textDate === j_textDate) {\r\n//             if (i_textDate in splitToDate) {\r\n//               splitToDate[i_textDate].push(currentItem);\r\n//             } else {\r\n//               splitToDate[i_textDate] = [currentItem];\r\n//             }\r\n//           }\r\n//         }\r\n//       }\r\n//     }\r\n//     dispatch({\r\n//       type: FETCH_FROM_API,\r\n//       payload: { data: { city: data.city, list: splitToDate } },\r\n//     });\r\n//   };\r\n// };\r\n\r\nconst toggleTemp = (temperature) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: TOGGLE_TEMPERATURE,\r\n      payload: temperature,\r\n    });\r\n  };\r\n};\r\n\r\nexport { getWeatherData, toggleTemp };\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  getWeatherData,\r\n  toggleTemp,\r\n} from \"../actions/action_creators/data_fetch\";\r\nimport {\r\n  Box,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\n\r\nfunction RadioButtons() {\r\n  const dispatch = useDispatch();\r\n  const [selectTemp, setSelectTemp] = React.useState(\"celsius\");\r\n\r\n  const handleRefresh = () => {\r\n    dispatch(getWeatherData());\r\n  };\r\n\r\n  const handleTempRadios = (event) => {\r\n    setSelectTemp(event.target.value);\r\n    dispatch(toggleTemp(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      my={3}\r\n      mx=\"auto\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\">\r\n      <RadioGroup\r\n        aria-label=\"temperature\"\r\n        name=\"temperature\"\r\n        value={selectTemp}\r\n        onChange={handleTempRadios}\r\n        row={true}>\r\n        <FormControlLabel value=\"celsius\" control={<Radio />} label=\"Celsius\" />\r\n        <FormControlLabel\r\n          value=\"fahrenheit\"\r\n          control={<Radio />}\r\n          label=\"Fahrenheit\"\r\n        />\r\n      </RadioGroup>\r\n      <IconButton aria-label=\"refresh\" component=\"span\" onClick={handleRefresh}>\r\n        <RefreshIcon />\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default RadioButtons;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Card, CardContent, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 250,\r\n    margin: \"5px\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nfunction WeatherCard({ day }) {\r\n  const classes = useStyles();\r\n  const { weatherData, temperature } = useSelector(\r\n    (state) => state.weatherReducer\r\n  );\r\n  const dayData = weatherData.list[day];\r\n\r\n  const options = {\r\n    day: \"numeric\",\r\n    weekday: \"long\",\r\n    year: \"numeric\",\r\n    month: \"long\",\r\n  };\r\n  const today = new Date(day).toLocaleDateString(\"en-US\", options);\r\n\r\n  const handleTTemperature = () => {\r\n    const fahTemp = parseInt(dayData[0].main.temp);\r\n\r\n    if (temperature === \"celsius\") {\r\n      let celsius = (fahTemp - 32) * (5 / 9);\r\n      celsius = Math.round(celsius);\r\n      return `${celsius} \\xB0C`;\r\n    } else {\r\n      return `${fahTemp} \\xB0F`;\r\n    }\r\n  };\r\n\r\n  const makeFirstUppercase = (value) => {\r\n    return value.charAt(0).toUpperCase() + value.slice(1);\r\n  };\r\n\r\n  const cardData = {\r\n    date: today,\r\n    temp: handleTTemperature(),\r\n    weather: makeFirstUppercase(dayData[0].weather[0].main),\r\n    desc: makeFirstUppercase(dayData[0].weather[0].description),\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          align=\"center\"\r\n          gutterBottom>\r\n          {`${cardData.date}`}\r\n        </Typography>\r\n        <Box\r\n          mt={2}\r\n          display=\"flex\"\r\n          justifyContent=\"space-around\"\r\n          alignItems=\"center\">\r\n          <Typography className={classes.pos} color=\"textSecondary\">\r\n            {`${cardData.temp}`}\r\n          </Typography>\r\n          <Typography className={classes.pos} color=\"textSecondary\">\r\n            {`${cardData.weather}`}\r\n          </Typography>\r\n        </Box>\r\n        <Typography variant=\"body2\" component=\"p\" align=\"center\">\r\n          {cardData.desc}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default WeatherCard;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Box, IconButton } from \"@material-ui/core\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\n\r\nimport { WeatherCard } from \"../\";\r\nimport { carouselWrap, cardItem, selectedItem } from \"./Carousel.module.css\";\r\n\r\nfunction Carousel({ handleSelectDay }) {\r\n  const { weatherData } = useSelector((state) => state.weatherReducer);\r\n  const [selectedItemIndex, setSelectedItemIndex] = useState(0);\r\n  const currentItemRef = useRef([]);\r\n\r\n  const objLength = Object.keys(weatherData.list).length;\r\n\r\n  useEffect(() => {\r\n    if (weatherData.list && weatherData.list[0]) {\r\n      currentItemRef.current = currentItemRef?.current?.slice(0, objLength);\r\n\r\n      setSelectedItemIndex(0);\r\n      handleSelectDay(weatherData.list[Object.keys(weatherData.list)[0]]);\r\n    }\r\n  }, [weatherData.list, objLength, handleSelectDay]);\r\n\r\n  const handleSelectedItemChange = (newIdx) => {\r\n    if (weatherData.list && objLength > 0) {\r\n      setSelectedItemIndex(newIdx);\r\n      handleSelectDay(weatherData.list[Object.keys(weatherData.list)[newIdx]]);\r\n      if (currentItemRef?.current[newIdx]) {\r\n        currentItemRef?.current[newIdx]?.scrollIntoView({\r\n          inline: \"center\",\r\n          behavior: \"smooth\",\r\n          block: \"nearest\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLeftClick = () => {\r\n    if (weatherData.list && objLength > 0) {\r\n      let newIdx = selectedItemIndex - 1;\r\n      if (newIdx < 0) {\r\n        newIdx = objLength - 1;\r\n      }\r\n      handleSelectedItemChange(newIdx);\r\n    }\r\n  };\r\n\r\n  const handleRightClick = () => {\r\n    if (weatherData.list && objLength > 0) {\r\n      let newIdx = selectedItemIndex + 1;\r\n      if (newIdx >= objLength) {\r\n        newIdx = 0;\r\n      }\r\n      handleSelectedItemChange(newIdx);\r\n    }\r\n  };\r\n\r\n  const Controls = ({ type }) => {\r\n    const oprions = {\r\n      handler: type === \"left\" ? handleLeftClick : handleRightClick,\r\n      icon: type === \"left\" ? <ChevronLeftIcon /> : <ChevronRightIcon />,\r\n    };\r\n\r\n    return (\r\n      <IconButton\r\n        aria-label=\"refresh\"\r\n        component=\"span\"\r\n        onClick={oprions.handler}>\r\n        {oprions.icon}\r\n      </IconButton>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box my={3} display=\"flex\" alignItems=\"center\">\r\n      <Box width={60}>{selectedItemIndex > 0 && <Controls type=\"left\" />}</Box>\r\n      <div className={carouselWrap}>\r\n        {weatherData.list &&\r\n          objLength > 0 &&\r\n          Object.keys(weatherData.list).map((day, index) => (\r\n            <div\r\n              key={day}\r\n              ref={(el) => (currentItemRef.current[index] = el)}\r\n              className={`${cardItem} ${\r\n                selectedItemIndex === index && selectedItem\r\n              }`}>\r\n              <WeatherCard day={day} />\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <Box width={60}>\r\n        {selectedItemIndex !== objLength - 1 && <Controls type=\"right\" />}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Carousel;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport FusionCharts from \"fusioncharts\";\r\nimport Charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFC from \"react-fusioncharts\";\r\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\r\n\r\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\r\n\r\nfunction Chart({ seletctedDay }) {\r\n  const { temperature } = useSelector((state) => state.weatherReducer);\r\n\r\n  const onvertTime = (time24) => {\r\n    const [sHours, minutes] = time24.match(/([0-9]{1,2}):([0-9]{2})/).slice(1);\r\n    const period = +sHours < 12 ? \"AM\" : \"PM\";\r\n    const hours = +sHours % 12 || 12;\r\n\r\n    return `${hours}:${minutes} ${period}`;\r\n  };\r\n\r\n  const values = seletctedDay.map((item) => {\r\n    const time = item.dt_txt.split(\" \")[1];\r\n    let temp = parseInt(item.main.temp);\r\n\r\n    if (temperature === \"celsius\") {\r\n      let celsius = (temp - 32) * (5 / 9);\r\n      celsius = Math.round(celsius);\r\n      temp = celsius;\r\n    }\r\n\r\n    const arrayItem = { label: onvertTime(time), value: temp };\r\n    return arrayItem;\r\n  });\r\n\r\n  const data = {\r\n    chart: {\r\n      xAxisName: \"Time\",\r\n      yAxisName: \"Temperature\",\r\n      numberSuffix: `${temperature === \"celsius\" ? \" \\xB0C\" : \" \\xB0F\"}`,\r\n      theme: \"fusion\",\r\n    },\r\n    data: values,\r\n  };\r\n\r\n  const chartConfigs = {\r\n    type: \"column2d\",\r\n    width: window.innerWidth > 640 ? 500 : 400,\r\n    height: 370,\r\n    dataFormat: \"json\",\r\n    dataSource: data,\r\n  };\r\n\r\n  return (\r\n    <Box mt={4} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n      <ReactFC {...chartConfigs} />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\nimport { RadioButtons, Carousel, Chart } from \"../components/\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: \"100vh\",\r\n    margin: \"25px auto\",\r\n  },\r\n});\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n  const { weatherData } = useSelector((state) => state.weatherReducer);\r\n  const [seletctedDay, setSelectedDay] = useState(\r\n    weatherData.list[Object.keys(weatherData.list)[0]]\r\n  );\r\n\r\n  const handleSelectDay = (value) => {\r\n    setSelectedDay(value);\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" className={classes.root}>\r\n      <Typography variant=\"h3\" align=\"center\">\r\n        {`Weather in ${weatherData?.city.name},  ${weatherData?.city.country}`}\r\n      </Typography>\r\n      <RadioButtons />\r\n      <Carousel handleSelectDay={handleSelectDay} />\r\n      <Chart seletctedDay={seletctedDay} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect } from \"react\";\n\nimport { Loading, Home } from \"./pages/\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getWeatherData } from \"./actions/action_creators/data_fetch\";\n\nfunction App() {\n  const { weatherData } = useSelector((state) => state.weatherReducer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setTimeout(() => {\n      dispatch(getWeatherData());\n    }, 1000);\n  }, [dispatch]);\n\n  if (weatherData !== null) {\n    return <Home />;\n  } else {\n    return <Loading />;\n  }\n}\n\nexport default App;\n","import {\r\n  FETCH_FROM_API,\r\n  TOGGLE_TEMPERATURE,\r\n} from \"../actions/action_type/data_fetch\";\r\n\r\nconst initialState = {\r\n  weatherData: null,\r\n  temperature: \"celsius\",\r\n};\r\n\r\nexport default function weatherReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_FROM_API:\r\n      return { ...state, weatherData: action.payload.data };\r\n    case TOGGLE_TEMPERATURE:\r\n      return { ...state, temperature: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport weatherReducer from \"./data_fetch\";\r\n\r\nconst rootReducer = combineReducers({ weatherReducer });\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme/theme\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"carouselWrap\":\"Carousel_carouselWrap__1i-m9\",\"cardItem\":\"Carousel_cardItem__wRQSJ\",\"selectedItem\":\"Carousel_selectedItem__2mUx1\"};"],"sourceRoot":""}